apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: servicesyncs.mc.q42.nl
spec:
  group: mc.q42.nl
  names:
    kind: ServiceSync
    listKind: ServiceSyncList
    plural: servicesyncs
    singular: servicesync
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ServiceSync is the Schema for the servicesyncs API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ServiceSyncSpec defines the desired state of ServiceSync
          properties:
            endpointsConfigureMax:
              description: How many endpoints to configure for each service in this
                cluster (e.g. how many nodes should act as entry point). 0 is unlimited.
                Set this to a lower value if any of the clusters has a lot of nodes
                and a lot of endpoints from this to that cluster causes troubles with
                the amount of ip table rules.
              format: int32
              type: integer
            endpointsPublishMax:
              description: How many endpoints to publish from this cluster (e.g. how
                many nodes should act as entry point). 0 is unlimited. Set this to
                a lower value if this cluster has a lot of nodes, and the amount of
                data to sync becomes prohibitive. Note that the limited set of nodes
                must be capable enough to accept the traffic and must be highly available,
                e.g. setting it to 1 is not advisable.
              format: int32
              type: integer
            selector:
              description: Label selector for services. Only the services matching
                this selector will be published.
              properties:
                matchExpressions:
                  description: matchExpressions is a list of label selector requirements.
                    The requirements are ANDed.
                  items:
                    description: A label selector requirement is a selector that contains
                      values, a key, and an operator that relates the key and values.
                    properties:
                      key:
                        description: key is the label key that the selector applies
                          to.
                        type: string
                      operator:
                        description: operator represents a key's relationship to a
                          set of values. Valid operators are In, NotIn, Exists and
                          DoesNotExist.
                        type: string
                      values:
                        description: values is an array of string values. If the operator
                          is In or NotIn, the values array must be non-empty. If the
                          operator is Exists or DoesNotExist, the values array must
                          be empty. This array is replaced during a strategic merge
                          patch.
                        items:
                          type: string
                        type: array
                    required:
                    - key
                    - operator
                    type: object
                  type: array
                matchLabels:
                  additionalProperties:
                    type: string
                  description: matchLabels is a map of {key,value} pairs. A single
                    {key,value} in the matchLabels map is equivalent to an element
                    of matchExpressions, whose key field is "key", the operator is
                    "In", and the values array contains only "value". The requirements
                    are ANDed.
                  type: object
              type: object
            topicURL:
              description: URL of the PubSub topic, specified as for example "gcppubsub://projects/myproject/topics/mytopic".
              type: string
          required:
          - selector
          - topicURL
          type: object
        status:
          description: ServiceSyncStatus defines the observed state of ServiceSync
          properties:
            lastPublishHash:
              description: Hash of the data transmitted last (to deduplicate)
              type: string
            lastPublishTime:
              description: Last time the data was published
              format: date-time
              type: string
            peerClusters:
              description: Which clusters are we receiving data from?
              items:
                type: string
              type: array
            peerLastHeardFrom:
              additionalProperties:
                format: date-time
                type: string
              description: When did we last hear from the peer?
              type: object
            peerServices:
              description: Which endpoints did we receive from those clusters?
            selectedServices:
              description: Services that match the Selector & therefore will be published
              items:
                type: string
              type: array
          required:
          - lastPublishHash
          - lastPublishTime
          - peerClusters
          - peerLastHeardFrom
          - peerServices
          - selectedServices
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
